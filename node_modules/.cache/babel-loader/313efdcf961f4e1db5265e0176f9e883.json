{"ast":null,"code":"var _jsxFileName = \"/Users/m5/allied-technical-test-5/test-6/src/pages/Todo/index.tsx\";\nimport React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Grid, Typography } from '@material-ui/core';\nimport { createStructuredSelector } from 'reselect';\nimport { makeSelectTodos } from '../../selectors/default';\nimport { Link } from 'react-router-dom';\n\nconst Todo = props => {\n  const todos = props.todos;\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    wrap: \"nowrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"TODO\")), React.createElement(Grid, {\n    container: true,\n    item: true,\n    direction: \"column\",\n    wrap: \"nowrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, todos.map((todo, todoId) => {\n    const userId = todo.get('userId');\n    return React.createElement(Grid, {\n      key: todoId,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/todo/\".concat(userId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, todoId, \": \", todo.get('title')), React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Add Subtask\"));\n  }).valueSeq().toArray()));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  todos: makeSelectTodos()\n});\nexport default compose(connect(mapStateToProps, null))(Todo);","map":{"version":3,"sources":["/Users/m5/allied-technical-test-5/test-6/src/pages/Todo/index.tsx"],"names":["React","compose","connect","Grid","Typography","createStructuredSelector","makeSelectTodos","Link","Todo","props","todos","map","todo","todoId","userId","get","valueSeq","toArray","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAMA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,SAASC,IAAT,QAAqB,kBAArB;;AAUA,MAAMC,IAA0B,GAAIC,KAAD,IAAW;AAAA,QAE1CC,KAF0C,GAGxCD,KAHwC,CAE1CC,KAF0C;AAI5C,SACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE,IADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CALF,EAcE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,IAAI,EAAE,IAFR;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOIA,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC1B,UAAMC,MAAM,GAAGF,IAAI,CAACG,GAAL,CAAS,QAAT,CAAf;AACA,WAAO,oBAAC,IAAD;AACL,MAAA,GAAG,EAAEF,MADA;AAEL,MAAA,IAAI,EAAE,IAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIL,oBAAC,IAAD;AACE,MAAA,EAAE,kBAAWC,MAAX,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGD,MAHH,QAGaD,IAAI,CAACG,GAAL,CAAS,OAAT,CAHb,CAJK,EASL,oBAAC,MAAD;AACA,MAAA,OAAO,EAAC,UADR;AAEA,MAAA,OAAO,EACL,MAAM,CAAE,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATK,CAAP;AAkBD,GApBD,EAoBGC,QApBH,GAoBcC,OApBd,EAPJ,CAdF,CADF;AA+CD,CAnDD;;AAqDA,MAAMC,eAAe,GAAGb,wBAAwB,CAAC;AAC/CK,EAAAA,KAAK,EAAEJ,eAAe;AADyB,CAAD,CAAhD;AAKA,eAAeL,OAAO,CACpBC,OAAO,CAACgB,eAAD,EAAkB,IAAlB,CADa,CAAP,CAEbV,IAFa,CAAf","sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { IMatch } from '../../Interfaces';\nimport {\n  Record,\n  Map,\n} from 'immutable';\nimport { connect } from 'react-redux';\nimport { Grid, Typography } from '@material-ui/core';\nimport { createStructuredSelector } from 'reselect';\nimport { makeSelectTodos } from '../../selectors/default';\nimport { ITodo } from '../../actions/default';\nimport { Link } from 'react-router-dom';\n\ninterface ITodoComponentProps {\n  match: IMatch,\n}\n\ninterface ITodoProps extends ITodoComponentProps {\n  todos: Map<number, Record<ITodo>>\n}\n\nconst Todo: React.FC<ITodoProps> = (props) => {\n  const {\n    todos,\n  } = props;\n  return (\n    <Grid\n      container={true}\n      direction='column'\n      wrap='nowrap'\n    >\n      <Grid\n        item={true}\n      >\n        <Typography\n          variant='h5'\n        >\n          TODO\n        </Typography>\n      </Grid>\n      <Grid\n        container={true}\n        item={true}\n        direction='column'\n        wrap='nowrap'\n      >\n        {\n          todos.map((todo, todoId) => {\n            const userId = todo.get('userId');\n            return <Grid\n              key={todoId}\n              item={true}\n            >\n              <Link\n                to={`/todo/${userId}`}\n              >\n                {todoId}: {todo.get('title')}\n              </Link>\n              <Button\n              variant='outlined'\n              onClick={\n                () => {}\n              }\n            >\n              Add Subtask\n            </Button>\n            </Grid>;\n          }).valueSeq().toArray()\n        }\n      </Grid>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  todos: makeSelectTodos(),\n});\n\n\nexport default compose<React.ComponentClass<ITodoComponentProps>>(\n  connect(mapStateToProps, null)\n)(Todo);"]},"metadata":{},"sourceType":"module"}