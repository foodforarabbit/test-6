{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { Map, List } from 'immutable';\nexport const selectReducerState = () => state => {\n  const reducerState = state.get('default');\n\n  if (reducerState != null) {\n    return reducerState;\n  }\n\n  return Map();\n};\nexport const makeSelectUsers = () => createSelector(selectReducerState(), state => state.get('users') || Map());\nexport const makeSelectUser = userId => createSelector(makeSelectUsers(), users => users.get(userId));\nexport const makeSelectTodos = () => createSelector(selectReducerState(), state => state.get('todos') || Map());\nexport const makeSelectTodosForUser = userId => createSelector(makeSelectTodos(), todos => todos.filter(todo => todo.get('userId') === userId).toList() || List());\nexport const makeSelectSubTodoForTodo = todoId => createSelector(makeSelectSubTodoForTodo(), todos => todos.filter(todo => todo.get('todoId') === todoId).toList() || List());\nexport default {\n  selectReducerState\n};","map":{"version":3,"sources":["/Users/m5/allied-technical-test-5/test-6/src/selectors/default.ts"],"names":["createSelector","Map","List","selectReducerState","state","reducerState","get","makeSelectUsers","makeSelectUser","userId","users","makeSelectTodos","makeSelectTodosForUser","todos","filter","todo","toList","makeSelectSubTodoForTodo","todoId"],"mappings":"AAAA,SACEA,cADF,QAEO,UAFP;AAGA,SACEC,GADF,EAEEC,IAFF,QAIO,WAJP;AAcA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,KAAD,IAAgB;AACtD,QAAMC,YAAY,GAAGD,KAAK,CAACE,GAAN,CAAU,SAAV,CAArB;;AACA,MAAID,YAAY,IAAI,IAApB,EAA0B;AACxB,WAAOA,YAAP;AACD;;AACD,SAAOJ,GAAG,EAAV;AACD,CANM;AAQP,OAAO,MAAMM,eAAe,GAAG,MAAMP,cAAc,CACjDG,kBAAkB,EAD+B,EAEhDC,KAAD,IAAkCA,KAAK,CAACE,GAAN,CAAU,OAAV,KAAsBL,GAAG,EAFV,CAA5C;AAKP,OAAO,MAAMO,cAAc,GAAIC,MAAD,IAAoBT,cAAc,CAC9DO,eAAe,EAD+C,EAE7DG,KAAD,IAAWA,KAAK,CAACJ,GAAN,CAAUG,MAAV,CAFmD,CAAzD;AAKP,OAAO,MAAME,eAAe,GAAG,MAAMX,cAAc,CACjDG,kBAAkB,EAD+B,EAEhDC,KAAD,IAAkCA,KAAK,CAACE,GAAN,CAAU,OAAV,KAAsBL,GAAG,EAFV,CAA5C;AAKP,OAAO,MAAMW,sBAAsB,GAAIH,MAAD,IAAoBT,cAAc,CACtEW,eAAe,EADuD,EAErEE,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACT,GAAL,CAAS,QAAT,MAAuBG,MAA5C,EAAoDO,MAApD,MAAgEd,IAAI,EAFT,CAAjE;AAKP,OAAO,MAAMe,wBAAwB,GAAIC,MAAD,IAAoBlB,cAAc,CACxEiB,wBAAwB,EADgD,EAEvEJ,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACT,GAAL,CAAS,QAAT,MAAuBY,MAA5C,EAAoDF,MAApD,MAAgEd,IAAI,EAFP,CAAnE;AAKP,eAAe;AACbC,EAAAA;AADa,CAAf","sourcesContent":["import {\n  createSelector,\n} from 'reselect';\nimport {\n  Map,\n  List,\n  Record,\n} from 'immutable';\nimport {\n  IReducerState,\n} from '../reducers/default';\nimport {\n  ITodo,\n  IUser,\n  ISubTodo,\n} from '../actions/default';\n\nexport const selectReducerState = () => (state: any) => {\n  const reducerState = state.get('default');\n  if (reducerState != null) {\n    return reducerState;\n  }\n  return Map();\n};\n\nexport const makeSelectUsers = () => createSelector(\n  selectReducerState(),\n  (state: Record<IReducerState>) => state.get('users') || Map<number, Record<IUser>>(),\n);\n\nexport const makeSelectUser = (userId: number) => createSelector(\n  makeSelectUsers(),\n  (users) => users.get(userId),\n);\n\nexport const makeSelectTodos = () => createSelector(\n  selectReducerState(),\n  (state: Record<IReducerState>) => state.get('todos') || Map<number, Record<ITodo>>(),\n);\n\nexport const makeSelectTodosForUser = (userId: number) => createSelector(\n  makeSelectTodos(),\n  (todos) => todos.filter(todo => todo.get('userId') === userId).toList() || List<Record<ITodo>>(),\n);\n\nexport const makeSelectSubTodoForTodo = (todoId: number) => createSelector(\n  makeSelectSubTodoForTodo(),\n  (todos) => todos.filter(todo => todo.get('todoId') === todoId).toList() || List<Record<ISubTodo>>(),\n);\n\nexport default {\n  selectReducerState,\n};\n"]},"metadata":{},"sourceType":"module"}