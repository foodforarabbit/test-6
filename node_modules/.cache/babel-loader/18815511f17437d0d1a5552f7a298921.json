{"ast":null,"code":"import _objectSpread from \"/Users/m5/allied-technical-test-5/test-6/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/m5/allied-technical-test-5/test-6/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/m5/allied-technical-test-5/test-6/src/pages/TodoUser/index.tsx\";\nimport React, { useState } from 'react';\nimport { compose, bindActionCreators } from 'redux';\nimport { getIn } from 'immutable';\nimport { connect } from 'react-redux';\nimport { Grid, Typography, Button, TextField, Checkbox } from '@material-ui/core';\nimport { AddTodoAction, DeleteTodoAction, TodoFactory } from '../../actions/default';\nimport { makeSelectTodosForUser, makeSelectUser } from '../../selectors/default';\nimport { createStructuredSelector } from 'reselect';\n\nconst addTodo = (userId, todo) => new AddTodoAction({\n  userId,\n  todo\n});\n\nconst deleteTodo = todo => new DeleteTodoAction({\n  todo\n});\n\nconst completeTodo = todo => new CompleteTodoAction({\n  todo\n});\n\nconst Todo = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        textInput = _useState2[0],\n        setTextInput = _useState2[1];\n\n  const addTodo = props.addTodo,\n        deleteTodo = props.deleteTodo,\n        userId = props.userId,\n        todosForUser = props.todosForUser,\n        user = props.user;\n\n  if (user == null) {\n    return React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      wrap: \"nowrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"INVALID USER\")));\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    wrap: \"nowrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"TODOS FOR \", user.get('name'))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    direction: \"column\",\n    wrap: \"nowrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"title\",\n    value: textInput,\n    onChange: e => {\n      setTextInput(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: () => {\n      addTodo(userId, TodoFactory({\n        title: textInput\n      }));\n      setTextInput('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Add Todo\"))), todosForUser.map((todo, index) => {\n    return React.createElement(Grid, {\n      key: index,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: todo.get('complete'),\n      onChange: () => completedTodo('true'),\n      value: \"checkedA\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), todo.get('title'), React.createElement(Button, {\n      variant: \"outlined\" //@ts-ignore       \n      ,\n      onClick: () => deleteTodo(todo, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"> Delete Todo\"));\n  })));\n};\n\nconst mapStateToProps = (state, props) => {\n  const match = props.match;\n  const userId = parseInt(getIn(match, ['params', 'userId'], -1), 10); // from path / router\n\n  return _objectSpread({\n    userId\n  }, createStructuredSelector({\n    todosForUser: makeSelectTodosForUser(userId),\n    user: makeSelectUser(userId)\n  })(state));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return _objectSpread({}, bindActionCreators({\n    addTodo,\n    deleteTodo,\n    completedTodo\n  }, dispatch));\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Todo);","map":{"version":3,"sources":["/Users/m5/allied-technical-test-5/test-6/src/pages/TodoUser/index.tsx"],"names":["React","useState","compose","bindActionCreators","getIn","connect","Grid","Typography","Button","TextField","Checkbox","AddTodoAction","DeleteTodoAction","TodoFactory","makeSelectTodosForUser","makeSelectUser","createStructuredSelector","addTodo","userId","todo","deleteTodo","completeTodo","CompleteTodoAction","Todo","props","textInput","setTextInput","todosForUser","user","get","e","target","value","title","map","index","completedTodo","mapStateToProps","state","match","parseInt","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,OADF,EAEEC,kBAFF,QAKO,OALP;AAOA,SACEC,KADF,QAIO,WAJP;AAKA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,mBANP;AAOA,SACEC,aADF,EAEEC,gBAFF,EAIEC,WAJF,QAMO,uBANP;AAOA,SACEC,sBADF,EAEEC,cAFF,QAGO,yBAHP;AAIA,SAASC,wBAAT,QAAyC,UAAzC;;AAiBA,MAAMC,OAAO,GAAG,CAACC,MAAD,EAAiBC,IAAjB,KAAyC,IAAIR,aAAJ,CAAkB;AAAEO,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAzD;;AACA,MAAMC,UAAU,GAAID,IAAD,IAAyB,IAAIP,gBAAJ,CAAqB;AAAEO,EAAAA;AAAF,CAArB,CAA5C;;AACA,MAAME,YAAY,GAAIF,IAAD,IAAyB,IAAIG,kBAAJ,CAAuB;AAAEH,EAAAA;AAAF,CAAvB,CAA9C;;AAEA,MAAMI,IAA0B,GAAIC,KAAD,IAAW;AAAA,oBACVvB,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,QACrCwB,SADqC;AAAA,QAC1BC,YAD0B;;AAAA,QAI1CT,OAJ0C,GASxCO,KATwC,CAI1CP,OAJ0C;AAAA,QAK1CG,UAL0C,GASxCI,KATwC,CAK1CJ,UAL0C;AAAA,QAM1CF,MAN0C,GASxCM,KATwC,CAM1CN,MAN0C;AAAA,QAO1CS,YAP0C,GASxCH,KATwC,CAO1CG,YAP0C;AAAA,QAQ1CC,IAR0C,GASxCJ,KATwC,CAQ1CI,IAR0C;;AAU5C,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,WACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAE,IADb;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,IADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,CALF,CADF;AAiBD;;AACD,SACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE,IADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGaA,IAAI,CAACC,GAAL,CAAS,MAAT,CAHb,CAHF,CALF,EAcE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,IAAI,EAAE,IAFR;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE,IADR;AAEE,IAAA,SAAS,EAAE,IAFb;AAGE,IAAA,UAAU,EAAC,QAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE,IADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,KAAK,EAAEJ,SAFT;AAGE,IAAA,QAAQ,EAAGK,CAAD,IAAO;AACfJ,MAAAA,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CALF,EAgBE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE,IADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,OAAO,EACL,MAAM;AACJf,MAAAA,OAAO,CACLC,MADK,EAELL,WAAW,CAAC;AACVoB,QAAAA,KAAK,EAAER;AADG,OAAD,CAFN,CAAP;AAMAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CAhBF,CANF,EA4CIC,YAAY,CAACO,GAAb,CAAiB,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AAChC,WAAO,oBAAC,IAAD;AACL,MAAA,GAAG,EAAEA,KADA;AAEL,MAAA,IAAI,EAAE,IAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIP,oBAAC,QAAD;AACI,MAAA,OAAO,EAAEhB,IAAI,CAACU,GAAL,CAAS,UAAT,CADb;AAEI,MAAA,QAAQ,EAAE,MAAMO,aAAa,CAAC,MAAD,CAFjC;AAGI,MAAA,KAAK,EAAC,UAHV;AAII,MAAA,UAAU,EAAE;AACV,sBAAc;AADJ,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJO,EAYJjB,IAAI,CAACU,GAAL,CAAS,OAAT,CAZI,EAaL,oBAAC,MAAD;AACM,MAAA,OAAO,EAAC,UADd,CAEM;AAFN;AAGM,MAAA,OAAO,EAAE,MAAMT,UAAU,CAACD,IAAD,EAAOgB,KAAP,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbK,CAAP;AAoBD,GArBD,CA5CJ,CAdF,CADF;AAqFD,CAlHD;;AAoHA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAad,KAAb,KAA4C;AAAA,QAEhEe,KAFgE,GAG9Df,KAH8D,CAEhEe,KAFgE;AAIlE,QAAMrB,MAAM,GAAGsB,QAAQ,CAACpC,KAAK,CAACmC,KAAD,EAAQ,CAAC,QAAD,EAAW,QAAX,CAAR,EAA8B,CAAC,CAA/B,CAAN,EAAyC,EAAzC,CAAvB,CAJkE,CAIG;;AACrE;AACErB,IAAAA;AADF,KAEKF,wBAAwB,CAAC;AAC1BW,IAAAA,YAAY,EAAEb,sBAAsB,CAACI,MAAD,CADV;AAE1BU,IAAAA,IAAI,EAAEb,cAAc,CAACG,MAAD;AAFM,GAAD,CAAxB,CAGAoB,KAHA,CAFL;AAOD,CAZD;;AAcA,MAAMG,kBAAkB,GAAIC,QAAD,IAAmC;AAC5D,2BACKvC,kBAAkB,CAAC;AAAEc,IAAAA,OAAF;AAAWG,IAAAA,UAAX;AAAuBgB,IAAAA;AAAvB,GAAD,EAAyCM,QAAzC,CADvB;AAGD,CAJD;;AAOA,eAAexC,OAAO,CACpBG,OAAO,CAACgC,eAAD,EAAkBI,kBAAlB,CADa,CAAP,CAEblB,IAFa,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  compose,\n  bindActionCreators,\n  AnyAction,\n  Dispatch,\n} from 'redux';\nimport { IMatch } from '../../Interfaces';\nimport {\n  getIn,\n  Record,\n  List,\n} from 'immutable';\nimport { connect } from 'react-redux';\nimport {\n  Grid,\n  Typography,\n  Button,\n  TextField,\n  Checkbox\n} from '@material-ui/core';\nimport {\n  AddTodoAction,\n  DeleteTodoAction,\n  ITodo,\n  TodoFactory,\n  IUser,\n} from '../../actions/default';\nimport {\n  makeSelectTodosForUser,\n  makeSelectUser,\n} from '../../selectors/default';\nimport { createStructuredSelector } from 'reselect';\n\ninterface ITodoComponentProps {\n  match: IMatch,\n}\n\ninterface ITodoProps extends ITodoComponentProps {\n  addTodo: (userId: number, todo: Record<ITodo>) => void;\n  deleteTodo: (todoId: number) => void;\n  completeTodo: (todoId: number) => void;\n  userId: number;\n  todoId: number;\n  todosForUser: List<Record<ITodo>>;\n  user?: Record<IUser>;\n}\n\n\nconst addTodo = (userId: number, todo: Record<ITodo>) => new AddTodoAction({ userId, todo });\nconst deleteTodo = (todo: Record<ITodo>) => new DeleteTodoAction({ todo });\nconst completeTodo = (todo: Record<ITodo>) => new CompleteTodoAction({ todo });\n\nconst Todo: React.FC<ITodoProps> = (props) => {\n  const [textInput, setTextInput] = useState('');\n\n  const {\n    addTodo,\n    deleteTodo,\n    userId,\n    todosForUser,\n    user,\n  } = props;\n  if (user == null) {\n    return (\n      <Grid\n        container={true}\n        direction='column'\n        wrap='nowrap'\n      >\n        <Grid\n          item={true}\n        >\n          <Typography\n            variant='h5'\n          >\n            INVALID USER\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n  return (\n    <Grid\n      container={true}\n      direction='column'\n      wrap='nowrap'\n    >\n      <Grid\n        item={true}\n      >\n        <Typography\n          variant='h5'\n        >\n          TODOS FOR {user.get('name')}\n        </Typography>\n      </Grid>\n      <Grid\n        container={true}\n        item={true}\n        direction='column'\n        wrap='nowrap'\n      >\n        <Grid\n          item={true}\n          container={true}\n          alignItems='center'\n        >\n          <Grid\n            item={true}\n          >\n            <TextField\n              label='title'\n              value={textInput}\n              onChange={(e) => {\n                setTextInput(e.target.value);\n              }}\n            />\n          </Grid>\n          <Grid\n            item={true}\n          >\n            <Button\n              variant='outlined'\n              onClick={\n                () => {\n                  addTodo(\n                    userId,\n                    TodoFactory({\n                      title: textInput,\n                    }),\n                  );\n                  setTextInput('');\n                }\n              }\n            >\n              Add Todo\n            </Button>\n          </Grid>\n        </Grid>\n        {\n          todosForUser.map((todo, index) => {\n            return <Grid\n              key={index}\n              item={true}\n            >\n            <Checkbox\n                checked={todo.get('complete')}\n                onChange={() => completedTodo('true')}\n                value=\"checkedA\"\n                inputProps={{\n                  'aria-label': 'primary checkbox',\n                }}\n              />\n              {todo.get('title')}\n              <Button  \n                    variant='outlined'\n                    //@ts-ignore       \n                    onClick={() => deleteTodo(todo, index)}>>              \n                    Delete Todo\n                  </Button>\n            </Grid>;\n          })\n        }\n      </Grid>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = (state: any, props: ITodoComponentProps) => {\n  const {\n    match,\n  } = props;\n  const userId = parseInt(getIn(match, ['params', 'userId'], -1), 10); // from path / router\n  return {\n    userId,\n    ...createStructuredSelector({\n      todosForUser: makeSelectTodosForUser(userId),\n      user: makeSelectUser(userId),\n    })(state)\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\n  return {\n    ...bindActionCreators({ addTodo, deleteTodo, completedTodo }, dispatch)\n  };\n};\n\n\nexport default compose<React.ComponentClass<ITodoComponentProps>>(\n  connect(mapStateToProps, mapDispatchToProps)\n)(Todo);"]},"metadata":{},"sourceType":"module"}