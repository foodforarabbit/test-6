{"ast":null,"code":"import { fromJS, Map } from 'immutable';\nimport { DefaultActionTypes, UserFactory, TodoFactory } from '../actions/default'; // import {\n//   Settings,\n// } from '../../models';\n\nconst initialUsers = [UserFactory({\n  id: 1,\n  name: 'Ryan'\n}), UserFactory({\n  id: 2,\n  name: 'Sandy'\n}), UserFactory({\n  id: 3,\n  name: 'Sean'\n}), UserFactory({\n  id: 4,\n  name: 'Peter'\n})];\nconst initialTodos = [TodoFactory({\n  id: 1,\n  userId: 1,\n  title: 'Drink Water'\n})];\nconst INITIAL_STATE = fromJS({\n  lastUserId: initialUsers.length,\n  lastTodoId: initialTodos.length,\n  users: Map().withMutations(mutableMap => {\n    initialUsers.forEach(user => {\n      mutableMap.set(user.get('id'), user);\n    });\n  }),\n  todos: Map().withMutations(mutableMap => {\n    initialTodos.forEach(todo => {\n      mutableMap.set(todo.get('id'), todo);\n    });\n  })\n});\nexport const reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case DefaultActionTypes.ADD_USER:\n      {\n        const lastUserId = state.get('lastUserId');\n        const _ref = action,\n              payload = _ref.payload;\n        const user = payload.user;\n\n        if (user.get('name') === '') {\n          console.debug('no name!');\n          return state;\n        }\n\n        const userId = lastUserId + 1;\n        return state.withMutations(mutableState => {\n          mutableState.set('lastUserId', userId);\n          mutableState.setIn(['users', userId], user.set('id', userId));\n        });\n      }\n\n    case DefaultActionTypes.ADD_TODO:\n      {\n        const lastTodoId = state.get('lastTodoId');\n        const _ref2 = action,\n              payload = _ref2.payload;\n        const userId = payload.userId,\n              todo = payload.todo;\n\n        if (todo.get('title') === '') {\n          console.debug('no title!');\n          return state;\n        }\n\n        const todoId = lastTodoId + 1;\n        return state.withMutations(mutableState => {\n          mutableState.set('lastTodoId', todoId);\n          mutableState.setIn(['todos', todoId], todo.withMutations(mutableTodo => {\n            mutableTodo.set('id', todoId);\n            mutableTodo.set('userId', userId);\n          }));\n        });\n      }\n\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"sources":["/Users/m5/allied-technical-test-5/test-6/src/reducers/default.ts"],"names":["fromJS","Map","DefaultActionTypes","UserFactory","TodoFactory","initialUsers","id","name","initialTodos","userId","title","INITIAL_STATE","lastUserId","length","lastTodoId","users","withMutations","mutableMap","forEach","user","set","get","todos","todo","reducer","state","action","type","ADD_USER","payload","console","debug","mutableState","setIn","ADD_TODO","todoId","mutableTodo"],"mappings":"AAAA,SACEA,MADF,EAGEC,GAHF,QAIO,WAJP;AASA,SACEC,kBADF,EAMEC,WANF,EAOEC,WAPF,QAQO,oBARP,C,CAUA;AACA;AACA;;AASA,MAAMC,YAAY,GAAG,CACnBF,WAAW,CAAC;AACVG,EAAAA,EAAE,EAAE,CADM;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAD,CADQ,EAKnBJ,WAAW,CAAC;AACVG,EAAAA,EAAE,EAAE,CADM;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAD,CALQ,EASnBJ,WAAW,CAAC;AACVG,EAAAA,EAAE,EAAE,CADM;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAD,CATQ,EAanBJ,WAAW,CAAC;AACVG,EAAAA,EAAE,EAAE,CADM;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAD,CAbQ,CAArB;AAmBA,MAAMC,YAAY,GAAG,CACnBJ,WAAW,CAAC;AACVE,EAAAA,EAAE,EAAE,CADM;AAEVG,EAAAA,MAAM,EAAE,CAFE;AAGVC,EAAAA,KAAK,EAAE;AAHG,CAAD,CADQ,CAArB;AAOA,MAAMC,aAAa,GAAGX,MAAM,CAAC;AAC3BY,EAAAA,UAAU,EAAEP,YAAY,CAACQ,MADE;AAE3BC,EAAAA,UAAU,EAAEN,YAAY,CAACK,MAFE;AAG3BE,EAAAA,KAAK,EAAEd,GAAG,GAA0Be,aAA7B,CAA4CC,UAAD,IAAgB;AAChEZ,IAAAA,YAAY,CAACa,OAAb,CAAsBC,IAAD,IAAU;AAC7BF,MAAAA,UAAU,CAACG,GAAX,CAAeD,IAAI,CAACE,GAAL,CAAS,IAAT,CAAf,EAA+BF,IAA/B;AACD,KAFD;AAGD,GAJM,CAHoB;AAQ3BG,EAAAA,KAAK,EAAErB,GAAG,GAA0Be,aAA7B,CAA4CC,UAAD,IAAgB;AAChET,IAAAA,YAAY,CAACU,OAAb,CAAsBK,IAAD,IAAU;AAC7BN,MAAAA,UAAU,CAACG,GAAX,CAAeG,IAAI,CAACF,GAAL,CAAS,IAAT,CAAf,EAA+BE,IAA/B;AACD,KAFD;AAGD,GAJM;AARoB,CAAD,CAA5B;AAeA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAA4B,GAAGd,aAAhC,EAA+Ce,MAA/C,KAAmE;AACxF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKzB,kBAAkB,CAAC0B,QAAxB;AAAkC;AAChC,cAAMhB,UAAU,GAAGa,KAAK,CAACJ,GAAN,CAAU,YAAV,CAAnB;AADgC,qBAI5BK,MAJ4B;AAAA,cAG9BG,OAH8B,QAG9BA,OAH8B;AAAA,cAM9BV,IAN8B,GAO5BU,OAP4B,CAM9BV,IAN8B;;AAShC,YAAIA,IAAI,CAACE,GAAL,CAAS,MAAT,MAAqB,EAAzB,EAA6B;AAC3BS,UAAAA,OAAO,CAACC,KAAR,CAAc,UAAd;AACA,iBAAON,KAAP;AACD;;AAED,cAAMhB,MAAM,GAAGG,UAAU,GAAG,CAA5B;AACA,eAAOa,KAAK,CAACT,aAAN,CAAqBgB,YAAD,IAAkB;AAC3CA,UAAAA,YAAY,CAACZ,GAAb,CAAiB,YAAjB,EAA+BX,MAA/B;AACAuB,UAAAA,YAAY,CAACC,KAAb,CACE,CAAC,OAAD,EAAUxB,MAAV,CADF,EAEEU,IAAI,CAACC,GAAL,CAAS,IAAT,EAAeX,MAAf,CAFF;AAID,SANM,CAAP;AAOD;;AACD,SAAKP,kBAAkB,CAACgC,QAAxB;AAAkC;AAChC,cAAMpB,UAAU,GAAGW,KAAK,CAACJ,GAAN,CAAU,YAAV,CAAnB;AADgC,sBAI5BK,MAJ4B;AAAA,cAG9BG,OAH8B,SAG9BA,OAH8B;AAAA,cAM9BpB,MAN8B,GAQ5BoB,OAR4B,CAM9BpB,MAN8B;AAAA,cAO9Bc,IAP8B,GAQ5BM,OAR4B,CAO9BN,IAP8B;;AAUhC,YAAIA,IAAI,CAACF,GAAL,CAAS,OAAT,MAAsB,EAA1B,EAA8B;AAC5BS,UAAAA,OAAO,CAACC,KAAR,CAAc,WAAd;AACA,iBAAON,KAAP;AACD;;AAED,cAAMU,MAAM,GAAGrB,UAAU,GAAG,CAA5B;AACA,eAAOW,KAAK,CAACT,aAAN,CAAqBgB,YAAD,IAAkB;AAC3CA,UAAAA,YAAY,CAACZ,GAAb,CAAiB,YAAjB,EAA+Be,MAA/B;AACAH,UAAAA,YAAY,CAACC,KAAb,CACE,CAAC,OAAD,EAAUE,MAAV,CADF,EAEEZ,IAAI,CAACP,aAAL,CAAoBoB,WAAD,IAAiB;AAClCA,YAAAA,WAAW,CAAChB,GAAZ,CAAgB,IAAhB,EAAsBe,MAAtB;AACAC,YAAAA,WAAW,CAAChB,GAAZ,CAAgB,QAAhB,EAA0BX,MAA1B;AACD,WAHD,CAFF;AAOD,SATM,CAAP;AAUD;;AACD;AACE,aAAOgB,KAAP;AApDJ;AAsDD,CAvDM;AAyDP,eAAeD,OAAf","sourcesContent":["import {\n  fromJS,\n  Record,\n  Map,\n} from 'immutable';\nimport {\n  IAction,\n} from '../Interfaces';\n\nimport {\n  DefaultActionTypes,\n  ITodo,\n  AddTodoAction,\n  IUser,\n  AddUserAction,\n  UserFactory,\n  TodoFactory,\n} from '../actions/default';\n\n// import {\n//   Settings,\n// } from '../../models';\n\nexport interface IReducerState {\n  lastUserId: number;\n  lastTodoId: number;\n  users: Map<number, Record<IUser>>;\n  todos: Map<number, Record<ITodo>>;\n}\n\nconst initialUsers = [\n  UserFactory({\n    id: 1,\n    name: 'Ryan',\n  }),\n  UserFactory({\n    id: 2,\n    name: 'Sandy',\n  }),\n  UserFactory({\n    id: 3,\n    name: 'Sean',\n  }),\n  UserFactory({\n    id: 4,\n    name: 'Peter',\n  }),\n]\n\nconst initialTodos = [\n  TodoFactory({\n    id: 1,\n    userId: 1,\n    title: 'Drink Water',\n  })\n]\nconst INITIAL_STATE = fromJS({\n  lastUserId: initialUsers.length,\n  lastTodoId: initialTodos.length,\n  users: Map<number, Record<IUser>>().withMutations((mutableMap) => {\n    initialUsers.forEach((user) => {\n      mutableMap.set(user.get('id'), user);\n    })\n  }),\n  todos: Map<number, Record<ITodo>>().withMutations((mutableMap) => {\n    initialTodos.forEach((todo) => {\n      mutableMap.set(todo.get('id'), todo);\n    })\n  }),\n});\n\nexport const reducer = (state: Record<IReducerState> = INITIAL_STATE, action: IAction) => {\n  switch (action.type) {\n    case DefaultActionTypes.ADD_USER: {\n      const lastUserId = state.get('lastUserId');\n      const {\n        payload,\n      } = action as AddUserAction;\n      const {\n        user,\n      } = payload;\n\n      if (user.get('name') === '') {\n        console.debug('no name!')\n        return state;\n      }\n\n      const userId = lastUserId + 1;\n      return state.withMutations((mutableState) => {\n        mutableState.set('lastUserId', userId);\n        mutableState.setIn(\n          ['users', userId],\n          user.set('id', userId),\n        );\n      })\n    }\n    case DefaultActionTypes.ADD_TODO: {\n      const lastTodoId = state.get('lastTodoId');\n      const {\n        payload,\n      } = action as AddTodoAction;\n      const {\n        userId,\n        todo,\n      } = payload;\n\n      if (todo.get('title') === '') {\n        console.debug('no title!')\n        return state;\n      }\n\n      const todoId = lastTodoId + 1;\n      return state.withMutations((mutableState) => {\n        mutableState.set('lastTodoId', todoId);\n        mutableState.setIn(\n          ['todos', todoId],\n          todo.withMutations((mutableTodo) => {\n            mutableTodo.set('id', todoId)\n            mutableTodo.set('userId', userId)\n          }),\n        );\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}