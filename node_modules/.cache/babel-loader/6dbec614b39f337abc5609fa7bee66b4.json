{"ast":null,"code":"import _objectSpread from \"/Users/m5/allied-technical-test-5/test-6/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux-immutable';\nimport { compose } from 'redux';\nimport { connectRouter } from 'connected-react-router/immutable';\nimport { reducer as form } from 'redux-form/immutable';\nconst reducerConfig = {};\nexport function configureReducer({\n  history\n}) {\n  if (history != null) {\n    reducerConfig.history = history;\n  }\n}\nexport default function createReducer(injectedReducers) {\n  const composedReducers = [reducers => reducers];\n\n  const combinedReducers = _objectSpread({}, reducerConfig.history != null ? {\n    router: connectRouter(reducerConfig.history)\n  } : {}, {\n    form\n  }, injectedReducers);\n\n  return compose(...composedReducers)(combineReducers(combinedReducers));\n}","map":{"version":3,"sources":["/Users/m5/allied-technical-test-5/test-6/src/reducers.ts"],"names":["combineReducers","compose","connectRouter","reducer","form","reducerConfig","configureReducer","history","createReducer","injectedReducers","composedReducers","reducers","combinedReducers","router"],"mappings":";AACA,SAASA,eAAT,QAAgC,iBAAhC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,aAAT,QAA8B,kCAA9B;AAEA,SAASC,OAAO,IAAIC,IAApB,QAAgC,sBAAhC;AAIA,MAAMC,aAEL,GAAG,EAFJ;AAIA,OAAO,SAASC,gBAAT,CAA0B;AAC/BC,EAAAA;AAD+B,CAA1B,EAIJ;AACD,MAAIA,OAAO,IAAI,IAAf,EAAqB;AACnBF,IAAAA,aAAa,CAACE,OAAd,GAAwBA,OAAxB;AACD;AACF;AAED,eAAe,SAASC,aAAT,CAAuBC,gBAAvB,EAA4D;AACzE,QAAMC,gBAAgB,GAAG,CACtBC,QAAD,IAAmBA,QADI,CAAzB;;AAIA,QAAMC,gBAAgB,qBACjBP,aAAa,CAACE,OAAd,IAAyB,IAAzB,GACC;AACEM,IAAAA,MAAM,EAAEX,aAAa,CAACG,aAAa,CAACE,OAAf;AADvB,GADD,GAIC,EALgB;AAMpBH,IAAAA;AANoB,KAOjBK,gBAPiB,CAAtB;;AAUA,SAAOR,OAAO,CACZ,GAAGS,gBADS,CAAP,CAGLV,eAAe,CAACY,gBAAD,CAHV,CAAP;AAKD","sourcesContent":["\nimport { combineReducers } from 'redux-immutable';\nimport { compose } from 'redux';\n\nimport { connectRouter } from 'connected-react-router/immutable';\n\nimport { reducer as form } from 'redux-form/immutable';\nimport { GenericReducer, InjectedReducers } from './Interfaces';\nimport { History } from 'history';\n\nconst reducerConfig: {\n  history?: History,\n} = {};\n\nexport function configureReducer({\n  history,\n}: {\n  history?: History;\n}) {\n  if (history != null) {\n    reducerConfig.history = history;\n  }\n}\n\nexport default function createReducer(injectedReducers?: InjectedReducers) {\n  const composedReducers = [\n    (reducers: any) => reducers,\n  ];\n\n  const combinedReducers = {\n    ...reducerConfig.history != null\n      ? {\n          router: connectRouter(reducerConfig.history),\n        }\n      : {},\n    form,\n    ...injectedReducers,\n  };\n\n  return compose<GenericReducer>(\n    ...composedReducers\n  )(\n    combineReducers(combinedReducers)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}